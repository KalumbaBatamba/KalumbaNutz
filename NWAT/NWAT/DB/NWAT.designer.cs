#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.34209
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NWAT.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NWAT")]
	public partial class NWATDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertCriterion(Criterion instance);
    partial void UpdateCriterion(Criterion instance);
    partial void DeleteCriterion(Criterion instance);
    partial void InsertProjectProduct(ProjectProduct instance);
    partial void UpdateProjectProduct(ProjectProduct instance);
    partial void DeleteProjectProduct(ProjectProduct instance);
    partial void InsertCurrentMasterDataIds(CurrentMasterDataIds instance);
    partial void UpdateCurrentMasterDataIds(CurrentMasterDataIds instance);
    partial void DeleteCurrentMasterDataIds(CurrentMasterDataIds instance);
    partial void InsertFulfillment(Fulfillment instance);
    partial void UpdateFulfillment(Fulfillment instance);
    partial void DeleteFulfillment(Fulfillment instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertProjectCriterion(ProjectCriterion instance);
    partial void UpdateProjectCriterion(ProjectCriterion instance);
    partial void DeleteProjectCriterion(ProjectCriterion instance);
    #endregion
		
		public NWATDataContext() : 
				base(global::NWAT.Properties.Settings.Default.NWATConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public NWATDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NWATDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NWATDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NWATDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Criterion> Criterion
		{
			get
			{
				return this.GetTable<Criterion>();
			}
		}
		
		public System.Data.Linq.Table<ProjectProduct> ProjectProduct
		{
			get
			{
				return this.GetTable<ProjectProduct>();
			}
		}
		
		public System.Data.Linq.Table<CurrentMasterDataIds> CurrentMasterDataIds
		{
			get
			{
				return this.GetTable<CurrentMasterDataIds>();
			}
		}
		
		public System.Data.Linq.Table<Fulfillment> Fulfillment
		{
			get
			{
				return this.GetTable<Fulfillment>();
			}
		}
		
		public System.Data.Linq.Table<Product> Product
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Project> Project
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<ProjectCriterion> ProjectCriterion
		{
			get
			{
				return this.GetTable<ProjectCriterion>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Criterion")]
	public partial class Criterion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Criterion_Id;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Fulfillment> _Fulfillment;
		
		private EntitySet<ProjectCriterion> _ProjectCriterion;
		
		private EntitySet<ProjectCriterion> _ProjectParentCriterion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCriterion_IdChanging(int value);
    partial void OnCriterion_IdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Criterion()
		{
			this._Fulfillment = new EntitySet<Fulfillment>(new Action<Fulfillment>(this.attach_Fulfillment), new Action<Fulfillment>(this.detach_Fulfillment));
			this._ProjectCriterion = new EntitySet<ProjectCriterion>(new Action<ProjectCriterion>(this.attach_ProjectCriterion), new Action<ProjectCriterion>(this.detach_ProjectCriterion));
			this._ProjectParentCriterion = new EntitySet<ProjectCriterion>(new Action<ProjectCriterion>(this.attach_ProjectParentCriterion), new Action<ProjectCriterion>(this.detach_ProjectParentCriterion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Criterion_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Criterion_Id
		{
			get
			{
				return this._Criterion_Id;
			}
			set
			{
				if ((this._Criterion_Id != value))
				{
					this.OnCriterion_IdChanging(value);
					this.SendPropertyChanging();
					this._Criterion_Id = value;
					this.SendPropertyChanged("Criterion_Id");
					this.OnCriterion_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criterion_Fulfillment", Storage="_Fulfillment", ThisKey="Criterion_Id", OtherKey="Criterion_Id")]
		public EntitySet<Fulfillment> Fulfillment
		{
			get
			{
				return this._Fulfillment;
			}
			set
			{
				this._Fulfillment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criterion_ProjectCriterion", Storage="_ProjectCriterion", ThisKey="Criterion_Id", OtherKey="Criterion_Id")]
		public EntitySet<ProjectCriterion> ProjectCriterion
		{
			get
			{
				return this._ProjectCriterion;
			}
			set
			{
				this._ProjectCriterion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criterion_ProjectParentCriterion", Storage="_ProjectParentCriterion", ThisKey="Criterion_Id", OtherKey="Parent_Criterion_Id")]
		public EntitySet<ProjectCriterion> ProjectParentCriterion
		{
			get
			{
				return this._ProjectParentCriterion;
			}
			set
			{
				this._ProjectParentCriterion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fulfillment(Fulfillment entity)
		{
			this.SendPropertyChanging();
			entity.Criterion = this;
		}
		
		private void detach_Fulfillment(Fulfillment entity)
		{
			this.SendPropertyChanging();
			entity.Criterion = null;
		}
		
		private void attach_ProjectCriterion(ProjectCriterion entity)
		{
			this.SendPropertyChanging();
			entity.Criterion = this;
		}
		
		private void detach_ProjectCriterion(ProjectCriterion entity)
		{
			this.SendPropertyChanging();
			entity.Criterion = null;
		}
		
		private void attach_ProjectParentCriterion(ProjectCriterion entity)
		{
			this.SendPropertyChanging();
			entity.ParentCriterion = this;
		}
		
		private void detach_ProjectParentCriterion(ProjectCriterion entity)
		{
			this.SendPropertyChanging();
			entity.ParentCriterion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectProduct")]
	public partial class ProjectProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Project_Id;
		
		private int _Product_Id;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Project> _Project;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProject_IdChanging(int value);
    partial void OnProject_IdChanged();
    partial void OnProduct_IdChanging(int value);
    partial void OnProduct_IdChanged();
    #endregion
		
		public ProjectProduct()
		{
			this._Product = default(EntityRef<Product>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Project_Id
		{
			get
			{
				return this._Project_Id;
			}
			set
			{
				if ((this._Project_Id != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProject_IdChanging(value);
					this.SendPropertyChanging();
					this._Project_Id = value;
					this.SendPropertyChanged("Project_Id");
					this.OnProject_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProjectProduct", Storage="_Product", ThisKey="Product_Id", OtherKey="Product_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProjectProduct.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProjectProduct.Add(this);
						this._Product_Id = value.Product_Id;
					}
					else
					{
						this._Product_Id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectProduct", Storage="_Project", ThisKey="Project_Id", OtherKey="Project_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectProduct.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectProduct.Add(this);
						this._Project_Id = value.Project_Id;
					}
					else
					{
						this._Project_Id = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        public string Name { get; set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrentMasterDataIds")]
	public partial class CurrentMasterDataIds : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CurrentProjectId;
		
		private int _CurrentCriterionId;
		
		private int _CurrentProductId;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCurrentProjectIdChanging(int value);
    partial void OnCurrentProjectIdChanged();
    partial void OnCurrentCriterionIdChanging(int value);
    partial void OnCurrentCriterionIdChanged();
    partial void OnCurrentProductIdChanging(int value);
    partial void OnCurrentProductIdChanged();
    #endregion
		
		public CurrentMasterDataIds()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentProjectId", DbType="Int NOT NULL")]
		public int CurrentProjectId
		{
			get
			{
				return this._CurrentProjectId;
			}
			set
			{
				if ((this._CurrentProjectId != value))
				{
					this.OnCurrentProjectIdChanging(value);
					this.SendPropertyChanging();
					this._CurrentProjectId = value;
					this.SendPropertyChanged("CurrentProjectId");
					this.OnCurrentProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCriterionId", DbType="Int NOT NULL")]
		public int CurrentCriterionId
		{
			get
			{
				return this._CurrentCriterionId;
			}
			set
			{
				if ((this._CurrentCriterionId != value))
				{
					this.OnCurrentCriterionIdChanging(value);
					this.SendPropertyChanging();
					this._CurrentCriterionId = value;
					this.SendPropertyChanged("CurrentCriterionId");
					this.OnCurrentCriterionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentProductId", DbType="Int NOT NULL")]
		public int CurrentProductId
		{
			get
			{
				return this._CurrentProductId;
			}
			set
			{
				if ((this._CurrentProductId != value))
				{
					this.OnCurrentProductIdChanging(value);
					this.SendPropertyChanging();
					this._CurrentProductId = value;
					this.SendPropertyChanged("CurrentProductId");
					this.OnCurrentProductIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fulfillment")]
	public partial class Fulfillment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Project_Id;
		
		private int _Product_Id;
		
		private int _Criterion_Id;
		
		private bool _Fulfilled;
		
		private string _Comment;
		
		private EntityRef<Criterion> _Criterion;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Project> _Project;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProject_IdChanging(int value);
    partial void OnProject_IdChanged();
    partial void OnProduct_IdChanging(int value);
    partial void OnProduct_IdChanged();
    partial void OnCriterion_IdChanging(int value);
    partial void OnCriterion_IdChanged();
    partial void OnFulfilledChanging(bool value);
    partial void OnFulfilledChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Fulfillment()
		{
			this._Criterion = default(EntityRef<Criterion>);
			this._Product = default(EntityRef<Product>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Project_Id
		{
			get
			{
				return this._Project_Id;
			}
			set
			{
				if ((this._Project_Id != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProject_IdChanging(value);
					this.SendPropertyChanging();
					this._Project_Id = value;
					this.SendPropertyChanged("Project_Id");
					this.OnProject_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Criterion_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Criterion_Id
		{
			get
			{
				return this._Criterion_Id;
			}
			set
			{
				if ((this._Criterion_Id != value))
				{
					if (this._Criterion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCriterion_IdChanging(value);
					this.SendPropertyChanging();
					this._Criterion_Id = value;
					this.SendPropertyChanged("Criterion_Id");
					this.OnCriterion_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fulfilled", DbType="Bit NOT NULL")]
		public bool Fulfilled
		{
			get
			{
				return this._Fulfilled;
			}
			set
			{
				if ((this._Fulfilled != value))
				{
					this.OnFulfilledChanging(value);
					this.SendPropertyChanging();
					this._Fulfilled = value;
					this.SendPropertyChanged("Fulfilled");
					this.OnFulfilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criterion_Fulfillment", Storage="_Criterion", ThisKey="Criterion_Id", OtherKey="Criterion_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Criterion Criterion
		{
			get
			{
				return this._Criterion.Entity;
			}
			set
			{
				Criterion previousValue = this._Criterion.Entity;
				if (((previousValue != value) 
							|| (this._Criterion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Criterion.Entity = null;
						previousValue.Fulfillment.Remove(this);
					}
					this._Criterion.Entity = value;
					if ((value != null))
					{
						value.Fulfillment.Add(this);
						this._Criterion_Id = value.Criterion_Id;
					}
					else
					{
						this._Criterion_Id = default(int);
					}
					this.SendPropertyChanged("Criterion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Fulfillment", Storage="_Product", ThisKey="Product_Id", OtherKey="Product_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Fulfillment.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Fulfillment.Add(this);
						this._Product_Id = value.Product_Id;
					}
					else
					{
						this._Product_Id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Fulfillment", Storage="_Project", ThisKey="Project_Id", OtherKey="Project_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Fulfillment.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Fulfillment.Add(this);
						this._Project_Id = value.Project_Id;
					}
					else
					{
						this._Project_Id = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Product_Id;
		
		private string _Name;
		
		private string _Producer;
		
		private System.Nullable<double> _Price;
		
		private EntitySet<ProjectProduct> _ProjectProduct;
		
		private EntitySet<Fulfillment> _Fulfillment;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_IdChanging(int value);
    partial void OnProduct_IdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnProducerChanging(string value);
    partial void OnProducerChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    #endregion
		
		public Product()
		{
			this._ProjectProduct = new EntitySet<ProjectProduct>(new Action<ProjectProduct>(this.attach_ProjectProduct), new Action<ProjectProduct>(this.detach_ProjectProduct));
			this._Fulfillment = new EntitySet<Fulfillment>(new Action<Fulfillment>(this.attach_Fulfillment), new Action<Fulfillment>(this.detach_Fulfillment));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Producer", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Producer
		{
			get
			{
				return this._Producer;
			}
			set
			{
				if ((this._Producer != value))
				{
					this.OnProducerChanging(value);
					this.SendPropertyChanging();
					this._Producer = value;
					this.SendPropertyChanged("Producer");
					this.OnProducerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProjectProduct", Storage="_ProjectProduct", ThisKey="Product_Id", OtherKey="Product_Id")]
		public EntitySet<ProjectProduct> ProjectProduct
		{
			get
			{
				return this._ProjectProduct;
			}
			set
			{
				this._ProjectProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Fulfillment", Storage="_Fulfillment", ThisKey="Product_Id", OtherKey="Product_Id")]
		public EntitySet<Fulfillment> Fulfillment
		{
			get
			{
				return this._Fulfillment;
			}
			set
			{
				this._Fulfillment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectProduct(ProjectProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProjectProduct(ProjectProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Fulfillment(Fulfillment entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Fulfillment(Fulfillment entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Project_Id;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<ProjectProduct> _ProjectProduct;
		
		private EntitySet<Fulfillment> _Fulfillment;
		
		private EntitySet<ProjectCriterion> _ProjectCriterion;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProject_IdChanging(int value);
    partial void OnProject_IdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Project()
		{
			this._ProjectProduct = new EntitySet<ProjectProduct>(new Action<ProjectProduct>(this.attach_ProjectProduct), new Action<ProjectProduct>(this.detach_ProjectProduct));
			this._Fulfillment = new EntitySet<Fulfillment>(new Action<Fulfillment>(this.attach_Fulfillment), new Action<Fulfillment>(this.detach_Fulfillment));
			this._ProjectCriterion = new EntitySet<ProjectCriterion>(new Action<ProjectCriterion>(this.attach_ProjectCriterion), new Action<ProjectCriterion>(this.detach_ProjectCriterion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Project_Id
		{
			get
			{
				return this._Project_Id;
			}
			set
			{
				if ((this._Project_Id != value))
				{
					this.OnProject_IdChanging(value);
					this.SendPropertyChanging();
					this._Project_Id = value;
					this.SendPropertyChanged("Project_Id");
					this.OnProject_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectProduct", Storage="_ProjectProduct", ThisKey="Project_Id", OtherKey="Project_Id")]
		public EntitySet<ProjectProduct> ProjectProduct
		{
			get
			{
				return this._ProjectProduct;
			}
			set
			{
				this._ProjectProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Fulfillment", Storage="_Fulfillment", ThisKey="Project_Id", OtherKey="Project_Id")]
		public EntitySet<Fulfillment> Fulfillment
		{
			get
			{
				return this._Fulfillment;
			}
			set
			{
				this._Fulfillment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectCriterion", Storage="_ProjectCriterion", ThisKey="Project_Id", OtherKey="Project_Id")]
		public EntitySet<ProjectCriterion> ProjectCriterion
		{
			get
			{
				return this._ProjectCriterion;
			}
			set
			{
				this._ProjectCriterion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectProduct(ProjectProduct entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectProduct(ProjectProduct entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Fulfillment(Fulfillment entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Fulfillment(Fulfillment entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProjectCriterion(ProjectCriterion entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectCriterion(ProjectCriterion entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectCriterion")]
	public partial class ProjectCriterion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Project_Id;
		
		private int _Criterion_Id;
		
		private int _Layer_Depth;
		
		private System.Nullable<int> _Parent_Criterion_Id;
		
		private int _Weighting_Cardinal;
		
		private System.Nullable<double> _Weighting_Percentage_Layer;
		
		private System.Nullable<double> _Weighting_Percentage_Project;
		
		private EntityRef<Criterion> _Criterion;
		
		private EntityRef<Criterion> _ParentCriterion;
		
		private EntityRef<Project> _Project;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProject_IdChanging(int value);
    partial void OnProject_IdChanged();
    partial void OnCriterion_IdChanging(int value);
    partial void OnCriterion_IdChanged();
    partial void OnLayer_DepthChanging(int value);
    partial void OnLayer_DepthChanged();
    partial void OnParent_Criterion_IdChanging(System.Nullable<int> value);
    partial void OnParent_Criterion_IdChanged();
    partial void OnWeighting_CardinalChanging(int value);
    partial void OnWeighting_CardinalChanged();
    partial void OnWeighting_Percentage_LayerChanging(System.Nullable<double> value);
    partial void OnWeighting_Percentage_LayerChanged();
    partial void OnWeighting_Percentage_ProjectChanging(System.Nullable<double> value);
    partial void OnWeighting_Percentage_ProjectChanged();
    #endregion
		
		public ProjectCriterion()
		{
			this._Criterion = default(EntityRef<Criterion>);
			this._ParentCriterion = default(EntityRef<Criterion>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Project_Id
		{
			get
			{
				return this._Project_Id;
			}
			set
			{
				if ((this._Project_Id != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProject_IdChanging(value);
					this.SendPropertyChanging();
					this._Project_Id = value;
					this.SendPropertyChanged("Project_Id");
					this.OnProject_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Criterion_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Criterion_Id
		{
			get
			{
				return this._Criterion_Id;
			}
			set
			{
				if ((this._Criterion_Id != value))
				{
					if (this._Criterion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCriterion_IdChanging(value);
					this.SendPropertyChanging();
					this._Criterion_Id = value;
					this.SendPropertyChanged("Criterion_Id");
					this.OnCriterion_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Layer_Depth", DbType="Int NOT NULL")]
		public int Layer_Depth
		{
			get
			{
				return this._Layer_Depth;
			}
			set
			{
				if ((this._Layer_Depth != value))
				{
					this.OnLayer_DepthChanging(value);
					this.SendPropertyChanging();
					this._Layer_Depth = value;
					this.SendPropertyChanged("Layer_Depth");
					this.OnLayer_DepthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent_Criterion_Id", DbType="Int")]
		public System.Nullable<int> Parent_Criterion_Id
		{
			get
			{
				return this._Parent_Criterion_Id;
			}
			set
			{
				if ((this._Parent_Criterion_Id != value))
				{
					if (this._ParentCriterion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParent_Criterion_IdChanging(value);
					this.SendPropertyChanging();
					this._Parent_Criterion_Id = value;
					this.SendPropertyChanged("Parent_Criterion_Id");
					this.OnParent_Criterion_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weighting_Cardinal", DbType="Int NOT NULL")]
		public int Weighting_Cardinal
		{
			get
			{
				return this._Weighting_Cardinal;
			}
			set
			{
				if ((this._Weighting_Cardinal != value))
				{
					this.OnWeighting_CardinalChanging(value);
					this.SendPropertyChanging();
					this._Weighting_Cardinal = value;
					this.SendPropertyChanged("Weighting_Cardinal");
					this.OnWeighting_CardinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weighting_Percentage_Layer", DbType="Float")]
		public System.Nullable<double> Weighting_Percentage_Layer
		{
			get
			{
				return this._Weighting_Percentage_Layer;
			}
			set
			{
				if ((this._Weighting_Percentage_Layer != value))
				{
					this.OnWeighting_Percentage_LayerChanging(value);
					this.SendPropertyChanging();
					this._Weighting_Percentage_Layer = value;
					this.SendPropertyChanged("Weighting_Percentage_Layer");
					this.OnWeighting_Percentage_LayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weighting_Percentage_Project", DbType="Float")]
		public System.Nullable<double> Weighting_Percentage_Project
		{
			get
			{
				return this._Weighting_Percentage_Project;
			}
			set
			{
				if ((this._Weighting_Percentage_Project != value))
				{
					this.OnWeighting_Percentage_ProjectChanging(value);
					this.SendPropertyChanging();
					this._Weighting_Percentage_Project = value;
					this.SendPropertyChanged("Weighting_Percentage_Project");
					this.OnWeighting_Percentage_ProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criterion_ProjectCriterion", Storage="_Criterion", ThisKey="Criterion_Id", OtherKey="Criterion_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Criterion Criterion
		{
			get
			{
				return this._Criterion.Entity;
			}
			set
			{
				Criterion previousValue = this._Criterion.Entity;
				if (((previousValue != value) 
							|| (this._Criterion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Criterion.Entity = null;
						previousValue.ProjectCriterion.Remove(this);
					}
					this._Criterion.Entity = value;
					if ((value != null))
					{
						value.ProjectCriterion.Add(this);
						this._Criterion_Id = value.Criterion_Id;
					}
					else
					{
						this._Criterion_Id = default(int);
					}
					this.SendPropertyChanged("Criterion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criterion_ProjectParentCriterion", Storage="_ParentCriterion", ThisKey="Parent_Criterion_Id", OtherKey="Criterion_Id", IsForeignKey=true)]
		public Criterion ParentCriterion
		{
			get
			{
				return this._ParentCriterion.Entity;
			}
			set
			{
				Criterion previousValue = this._ParentCriterion.Entity;
				if (((previousValue != value) 
							|| (this._ParentCriterion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentCriterion.Entity = null;
						previousValue.ProjectParentCriterion.Remove(this);
					}
					this._ParentCriterion.Entity = value;
					if ((value != null))
					{
						value.ProjectParentCriterion.Add(this);
						this._Parent_Criterion_Id = value.Criterion_Id;
					}
					else
					{
						this._Parent_Criterion_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentCriterion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectCriterion", Storage="_Project", ThisKey="Project_Id", OtherKey="Project_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectCriterion.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectCriterion.Add(this);
						this._Project_Id = value.Project_Id;
					}
					else
					{
						this._Project_Id = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        public string Name { get; set; }
    }
}
#pragma warning restore 1591
