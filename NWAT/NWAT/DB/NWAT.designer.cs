#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.34209
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NWAT.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NWAT")]
	public partial class NWATDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertFulfillment(Fulfillment instance);
    partial void UpdateFulfillment(Fulfillment instance);
    partial void DeleteFulfillment(Fulfillment instance);
    partial void InsertProjectProduct(ProjectProduct instance);
    partial void UpdateProjectProduct(ProjectProduct instance);
    partial void DeleteProjectProduct(ProjectProduct instance);
    partial void InsertCriterion(Criterion instance);
    partial void UpdateCriterion(Criterion instance);
    partial void DeleteCriterion(Criterion instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertProjectCriterion(ProjectCriterion instance);
    partial void UpdateProjectCriterion(ProjectCriterion instance);
    partial void DeleteProjectCriterion(ProjectCriterion instance);
    #endregion
		
		public NWATDataContext() : 
				base(global::NWAT.Properties.Settings.Default.NWATConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public NWATDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NWATDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NWATDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NWATDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Fulfillment> Fulfillment
		{
			get
			{
				return this.GetTable<Fulfillment>();
			}
		}
		
		public System.Data.Linq.Table<ProjectProduct> ProjectProduct
		{
			get
			{
				return this.GetTable<ProjectProduct>();
			}
		}
		
		public System.Data.Linq.Table<Criterion> Criterion
		{
			get
			{
				return this.GetTable<Criterion>();
			}
		}
		
		public System.Data.Linq.Table<Product> Product
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Project> Project
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<ProjectCriterion> ProjectCriterion
		{
			get
			{
				return this.GetTable<ProjectCriterion>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tab_Erfüllung")]
	public partial class Fulfillment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Projekt_Id;
		
		private int _Produkt_Id;
		
		private int _Kriterium_Id;
		
		private int _Erfüllungsgrad;
		
		private string _Kommentar;
		
		private EntityRef<Criterion> _Tab_Kriterium;
		
		private EntityRef<Product> _Tab_Produkt;
		
		private EntityRef<Project> _Tab_Projekt;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjekt_IdChanging(int value);
    partial void OnProjekt_IdChanged();
    partial void OnProdukt_IdChanging(int value);
    partial void OnProdukt_IdChanged();
    partial void OnKriterium_IdChanging(int value);
    partial void OnKriterium_IdChanged();
    partial void OnErfüllungsgradChanging(int value);
    partial void OnErfüllungsgradChanged();
    partial void OnKommentarChanging(string value);
    partial void OnKommentarChanged();
    #endregion
		
		public Fulfillment()
		{
			this._Tab_Kriterium = default(EntityRef<Criterion>);
			this._Tab_Produkt = default(EntityRef<Product>);
			this._Tab_Projekt = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Projekt_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Projekt_Id
		{
			get
			{
				return this._Projekt_Id;
			}
			set
			{
				if ((this._Projekt_Id != value))
				{
					if (this._Tab_Projekt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjekt_IdChanging(value);
					this.SendPropertyChanging();
					this._Projekt_Id = value;
					this.SendPropertyChanged("Projekt_Id");
					this.OnProjekt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Produkt_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Produkt_Id
		{
			get
			{
				return this._Produkt_Id;
			}
			set
			{
				if ((this._Produkt_Id != value))
				{
					if (this._Tab_Produkt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdukt_IdChanging(value);
					this.SendPropertyChanging();
					this._Produkt_Id = value;
					this.SendPropertyChanged("Produkt_Id");
					this.OnProdukt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kriterium_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Kriterium_Id
		{
			get
			{
				return this._Kriterium_Id;
			}
			set
			{
				if ((this._Kriterium_Id != value))
				{
					if (this._Tab_Kriterium.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKriterium_IdChanging(value);
					this.SendPropertyChanging();
					this._Kriterium_Id = value;
					this.SendPropertyChanged("Kriterium_Id");
					this.OnKriterium_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Erfüllungsgrad", DbType="Int NOT NULL")]
		public int Erfüllungsgrad
		{
			get
			{
				return this._Erfüllungsgrad;
			}
			set
			{
				if ((this._Erfüllungsgrad != value))
				{
					this.OnErfüllungsgradChanging(value);
					this.SendPropertyChanging();
					this._Erfüllungsgrad = value;
					this.SendPropertyChanged("Erfüllungsgrad");
					this.OnErfüllungsgradChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kommentar", DbType="NVarChar(MAX)")]
		public string Kommentar
		{
			get
			{
				return this._Kommentar;
			}
			set
			{
				if ((this._Kommentar != value))
				{
					this.OnKommentarChanging(value);
					this.SendPropertyChanging();
					this._Kommentar = value;
					this.SendPropertyChanged("Kommentar");
					this.OnKommentarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criterion_Fulfillment", Storage="_Tab_Kriterium", ThisKey="Kriterium_Id", OtherKey="Kriterium_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Criterion Criterion
		{
			get
			{
				return this._Tab_Kriterium.Entity;
			}
			set
			{
				Criterion previousValue = this._Tab_Kriterium.Entity;
				if (((previousValue != value) 
							|| (this._Tab_Kriterium.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tab_Kriterium.Entity = null;
						previousValue.Fulfillment.Remove(this);
					}
					this._Tab_Kriterium.Entity = value;
					if ((value != null))
					{
						value.Fulfillment.Add(this);
						this._Kriterium_Id = value.Kriterium_Id;
					}
					else
					{
						this._Kriterium_Id = default(int);
					}
					this.SendPropertyChanged("Criterion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Fulfillment", Storage="_Tab_Produkt", ThisKey="Produkt_Id", OtherKey="Produkt_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Tab_Produkt.Entity;
			}
			set
			{
				Product previousValue = this._Tab_Produkt.Entity;
				if (((previousValue != value) 
							|| (this._Tab_Produkt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tab_Produkt.Entity = null;
						previousValue.Fulfillment.Remove(this);
					}
					this._Tab_Produkt.Entity = value;
					if ((value != null))
					{
						value.Fulfillment.Add(this);
						this._Produkt_Id = value.Produkt_Id;
					}
					else
					{
						this._Produkt_Id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Fulfillment", Storage="_Tab_Projekt", ThisKey="Projekt_Id", OtherKey="Projekt_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Tab_Projekt.Entity;
			}
			set
			{
				Project previousValue = this._Tab_Projekt.Entity;
				if (((previousValue != value) 
							|| (this._Tab_Projekt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tab_Projekt.Entity = null;
						previousValue.Fulfillment.Remove(this);
					}
					this._Tab_Projekt.Entity = value;
					if ((value != null))
					{
						value.Fulfillment.Add(this);
						this._Projekt_Id = value.Projekt_Id;
					}
					else
					{
						this._Projekt_Id = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tab_Projektprodukt")]
	public partial class ProjectProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Projekt_Id;
		
		private int _Produkt_Id;
		
		private EntityRef<Product> _Tab_Produkt;
		
		private EntityRef<Project> _Tab_Projekt;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjekt_IdChanging(int value);
    partial void OnProjekt_IdChanged();
    partial void OnProdukt_IdChanging(int value);
    partial void OnProdukt_IdChanged();
    #endregion
		
		public ProjectProduct()
		{
			this._Tab_Produkt = default(EntityRef<Product>);
			this._Tab_Projekt = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Projekt_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Projekt_Id
		{
			get
			{
				return this._Projekt_Id;
			}
			set
			{
				if ((this._Projekt_Id != value))
				{
					if (this._Tab_Projekt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjekt_IdChanging(value);
					this.SendPropertyChanging();
					this._Projekt_Id = value;
					this.SendPropertyChanged("Projekt_Id");
					this.OnProjekt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Produkt_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Produkt_Id
		{
			get
			{
				return this._Produkt_Id;
			}
			set
			{
				if ((this._Produkt_Id != value))
				{
					if (this._Tab_Produkt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProdukt_IdChanging(value);
					this.SendPropertyChanging();
					this._Produkt_Id = value;
					this.SendPropertyChanged("Produkt_Id");
					this.OnProdukt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProjectProduct", Storage="_Tab_Produkt", ThisKey="Produkt_Id", OtherKey="Produkt_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Tab_Produkt.Entity;
			}
			set
			{
				Product previousValue = this._Tab_Produkt.Entity;
				if (((previousValue != value) 
							|| (this._Tab_Produkt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tab_Produkt.Entity = null;
						previousValue.ProjectProduct.Remove(this);
					}
					this._Tab_Produkt.Entity = value;
					if ((value != null))
					{
						value.ProjectProduct.Add(this);
						this._Produkt_Id = value.Produkt_Id;
					}
					else
					{
						this._Produkt_Id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectProduct", Storage="_Tab_Projekt", ThisKey="Projekt_Id", OtherKey="Projekt_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Tab_Projekt.Entity;
			}
			set
			{
				Project previousValue = this._Tab_Projekt.Entity;
				if (((previousValue != value) 
							|| (this._Tab_Projekt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tab_Projekt.Entity = null;
						previousValue.ProjectProduct.Remove(this);
					}
					this._Tab_Projekt.Entity = value;
					if ((value != null))
					{
						value.ProjectProduct.Add(this);
						this._Projekt_Id = value.Projekt_Id;
					}
					else
					{
						this._Projekt_Id = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tab_Kriterium")]
	public partial class Criterion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Kriterium_Id;
		
		private string _Name;
		
		private string _Beschreibung;
		
		private bool _Skalar;
		
		private EntitySet<Fulfillment> _Tab_Erfüllung;
		
		private EntitySet<ProjectCriterion> _Tab_Projektkriterium;
		
		private EntitySet<ProjectCriterion> _Tab_Projektkriterium1;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKriterium_IdChanging(int value);
    partial void OnKriterium_IdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBeschreibungChanging(string value);
    partial void OnBeschreibungChanged();
    partial void OnSkalarChanging(bool value);
    partial void OnSkalarChanged();
    #endregion
		
		public Criterion()
		{
			this._Tab_Erfüllung = new EntitySet<Fulfillment>(new Action<Fulfillment>(this.attach_Tab_Erfüllung), new Action<Fulfillment>(this.detach_Tab_Erfüllung));
			this._Tab_Projektkriterium = new EntitySet<ProjectCriterion>(new Action<ProjectCriterion>(this.attach_Tab_Projektkriterium), new Action<ProjectCriterion>(this.detach_Tab_Projektkriterium));
			this._Tab_Projektkriterium1 = new EntitySet<ProjectCriterion>(new Action<ProjectCriterion>(this.attach_Tab_Projektkriterium1), new Action<ProjectCriterion>(this.detach_Tab_Projektkriterium1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kriterium_Id", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Kriterium_Id
		{
			get
			{
				return this._Kriterium_Id;
			}
			set
			{
				if ((this._Kriterium_Id != value))
				{
					this.OnKriterium_IdChanging(value);
					this.SendPropertyChanging();
					this._Kriterium_Id = value;
					this.SendPropertyChanged("Kriterium_Id");
					this.OnKriterium_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beschreibung", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Beschreibung
		{
			get
			{
				return this._Beschreibung;
			}
			set
			{
				if ((this._Beschreibung != value))
				{
					this.OnBeschreibungChanging(value);
					this.SendPropertyChanging();
					this._Beschreibung = value;
					this.SendPropertyChanged("Beschreibung");
					this.OnBeschreibungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skalar", DbType="Bit NOT NULL")]
		public bool Skalar
		{
			get
			{
				return this._Skalar;
			}
			set
			{
				if ((this._Skalar != value))
				{
					this.OnSkalarChanging(value);
					this.SendPropertyChanging();
					this._Skalar = value;
					this.SendPropertyChanged("Skalar");
					this.OnSkalarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criterion_Fulfillment", Storage="_Tab_Erfüllung", ThisKey="Kriterium_Id", OtherKey="Kriterium_Id")]
		public EntitySet<Fulfillment> Fulfillment
		{
			get
			{
				return this._Tab_Erfüllung;
			}
			set
			{
				this._Tab_Erfüllung.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criterion_ProjectCriterion", Storage="_Tab_Projektkriterium", ThisKey="Kriterium_Id", OtherKey="Kriterium_Id")]
		public EntitySet<ProjectCriterion> Tab_Projektkriterium
		{
			get
			{
				return this._Tab_Projektkriterium;
			}
			set
			{
				this._Tab_Projektkriterium.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criterion_ProjectCriterion1", Storage="_Tab_Projektkriterium1", ThisKey="Kriterium_Id", OtherKey="Parent_Kriterium_Id")]
		public EntitySet<ProjectCriterion> ProjectCriterion
		{
			get
			{
				return this._Tab_Projektkriterium1;
			}
			set
			{
				this._Tab_Projektkriterium1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tab_Erfüllung(Fulfillment entity)
		{
			this.SendPropertyChanging();
			entity.Criterion = this;
		}
		
		private void detach_Tab_Erfüllung(Fulfillment entity)
		{
			this.SendPropertyChanging();
			entity.Criterion = null;
		}
		
		private void attach_Tab_Projektkriterium(ProjectCriterion entity)
		{
			this.SendPropertyChanging();
			entity.Tab_Kriterium = this;
		}
		
		private void detach_Tab_Projektkriterium(ProjectCriterion entity)
		{
			this.SendPropertyChanging();
			entity.Tab_Kriterium = null;
		}
		
		private void attach_Tab_Projektkriterium1(ProjectCriterion entity)
		{
			this.SendPropertyChanging();
			entity.Criterion = this;
		}
		
		private void detach_Tab_Projektkriterium1(ProjectCriterion entity)
		{
			this.SendPropertyChanging();
			entity.Criterion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tab_Produkt")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Produkt_Id;
		
		private string _Name;
		
		private string _Hersteller;
		
		private EntitySet<Fulfillment> _Tab_Erfüllung;
		
		private EntitySet<ProjectProduct> _Tab_Projektprodukt;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProdukt_IdChanging(int value);
    partial void OnProdukt_IdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHerstellerChanging(string value);
    partial void OnHerstellerChanged();
    #endregion
		
		public Product()
		{
			this._Tab_Erfüllung = new EntitySet<Fulfillment>(new Action<Fulfillment>(this.attach_Tab_Erfüllung), new Action<Fulfillment>(this.detach_Tab_Erfüllung));
			this._Tab_Projektprodukt = new EntitySet<ProjectProduct>(new Action<ProjectProduct>(this.attach_Tab_Projektprodukt), new Action<ProjectProduct>(this.detach_Tab_Projektprodukt));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Produkt_Id", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Produkt_Id
		{
			get
			{
				return this._Produkt_Id;
			}
			set
			{
				if ((this._Produkt_Id != value))
				{
					this.OnProdukt_IdChanging(value);
					this.SendPropertyChanging();
					this._Produkt_Id = value;
					this.SendPropertyChanged("Produkt_Id");
					this.OnProdukt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hersteller", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Hersteller
		{
			get
			{
				return this._Hersteller;
			}
			set
			{
				if ((this._Hersteller != value))
				{
					this.OnHerstellerChanging(value);
					this.SendPropertyChanging();
					this._Hersteller = value;
					this.SendPropertyChanged("Hersteller");
					this.OnHerstellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Fulfillment", Storage="_Tab_Erfüllung", ThisKey="Produkt_Id", OtherKey="Produkt_Id")]
		public EntitySet<Fulfillment> Fulfillment
		{
			get
			{
				return this._Tab_Erfüllung;
			}
			set
			{
				this._Tab_Erfüllung.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProjectProduct", Storage="_Tab_Projektprodukt", ThisKey="Produkt_Id", OtherKey="Produkt_Id")]
		public EntitySet<ProjectProduct> ProjectProduct
		{
			get
			{
				return this._Tab_Projektprodukt;
			}
			set
			{
				this._Tab_Projektprodukt.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tab_Erfüllung(Fulfillment entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Tab_Erfüllung(Fulfillment entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Tab_Projektprodukt(ProjectProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Tab_Projektprodukt(ProjectProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tab_Projekt")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Projekt_Id;
		
		private string _Name;
		
		private string _Beschreibung;
		
		private EntitySet<Fulfillment> _Tab_Erfüllung;
		
		private EntitySet<ProjectProduct> _Tab_Projektprodukt;
		
		private EntitySet<ProjectCriterion> _Tab_Projektkriterium;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjekt_IdChanging(int value);
    partial void OnProjekt_IdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBeschreibungChanging(string value);
    partial void OnBeschreibungChanged();
    #endregion
		
		public Project()
		{
			this._Tab_Erfüllung = new EntitySet<Fulfillment>(new Action<Fulfillment>(this.attach_Tab_Erfüllung), new Action<Fulfillment>(this.detach_Tab_Erfüllung));
			this._Tab_Projektprodukt = new EntitySet<ProjectProduct>(new Action<ProjectProduct>(this.attach_Tab_Projektprodukt), new Action<ProjectProduct>(this.detach_Tab_Projektprodukt));
			this._Tab_Projektkriterium = new EntitySet<ProjectCriterion>(new Action<ProjectCriterion>(this.attach_Tab_Projektkriterium), new Action<ProjectCriterion>(this.detach_Tab_Projektkriterium));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Projekt_Id", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Projekt_Id
		{
			get
			{
				return this._Projekt_Id;
			}
			set
			{
				if ((this._Projekt_Id != value))
				{
					this.OnProjekt_IdChanging(value);
					this.SendPropertyChanging();
					this._Projekt_Id = value;
					this.SendPropertyChanged("Projekt_Id");
					this.OnProjekt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beschreibung", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Beschreibung
		{
			get
			{
				return this._Beschreibung;
			}
			set
			{
				if ((this._Beschreibung != value))
				{
					this.OnBeschreibungChanging(value);
					this.SendPropertyChanging();
					this._Beschreibung = value;
					this.SendPropertyChanged("Beschreibung");
					this.OnBeschreibungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Fulfillment", Storage="_Tab_Erfüllung", ThisKey="Projekt_Id", OtherKey="Projekt_Id")]
		public EntitySet<Fulfillment> Fulfillment
		{
			get
			{
				return this._Tab_Erfüllung;
			}
			set
			{
				this._Tab_Erfüllung.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectProduct", Storage="_Tab_Projektprodukt", ThisKey="Projekt_Id", OtherKey="Projekt_Id")]
		public EntitySet<ProjectProduct> ProjectProduct
		{
			get
			{
				return this._Tab_Projektprodukt;
			}
			set
			{
				this._Tab_Projektprodukt.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectCriterion", Storage="_Tab_Projektkriterium", ThisKey="Projekt_Id", OtherKey="Projekt_Id")]
		public EntitySet<ProjectCriterion> ProjectCriterion
		{
			get
			{
				return this._Tab_Projektkriterium;
			}
			set
			{
				this._Tab_Projektkriterium.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tab_Erfüllung(Fulfillment entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Tab_Erfüllung(Fulfillment entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Tab_Projektprodukt(ProjectProduct entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Tab_Projektprodukt(ProjectProduct entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Tab_Projektkriterium(ProjectCriterion entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Tab_Projektkriterium(ProjectCriterion entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tab_Projektkriterium")]
	public partial class ProjectCriterion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Projekt_Id;
		
		private int _Kriterium_Id;
		
		private System.Nullable<int> _Parent_Kriterium_Id;
		
		private System.Nullable<int> _Gewichtung_kardinal;
		
		private System.Nullable<int> _Gewichtung_Prozentural_Ebene;
		
		private System.Nullable<int> _Gewichtung_Prozentural_Projekt;
		
		private EntityRef<Criterion> _Tab_Kriterium;
		
		private EntityRef<Criterion> _Tab_Kriterium1;
		
		private EntityRef<Project> _Tab_Projekt;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjekt_IdChanging(int value);
    partial void OnProjekt_IdChanged();
    partial void OnKriterium_IdChanging(int value);
    partial void OnKriterium_IdChanged();
    partial void OnParent_Kriterium_IdChanging(System.Nullable<int> value);
    partial void OnParent_Kriterium_IdChanged();
    partial void OnGewichtung_kardinalChanging(System.Nullable<int> value);
    partial void OnGewichtung_kardinalChanged();
    partial void OnGewichtung_Prozentural_EbeneChanging(System.Nullable<int> value);
    partial void OnGewichtung_Prozentural_EbeneChanged();
    partial void OnGewichtung_Prozentural_ProjektChanging(System.Nullable<int> value);
    partial void OnGewichtung_Prozentural_ProjektChanged();
    #endregion
		
		public ProjectCriterion()
		{
			this._Tab_Kriterium = default(EntityRef<Criterion>);
			this._Tab_Kriterium1 = default(EntityRef<Criterion>);
			this._Tab_Projekt = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Projekt_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Projekt_Id
		{
			get
			{
				return this._Projekt_Id;
			}
			set
			{
				if ((this._Projekt_Id != value))
				{
					if (this._Tab_Projekt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjekt_IdChanging(value);
					this.SendPropertyChanging();
					this._Projekt_Id = value;
					this.SendPropertyChanged("Projekt_Id");
					this.OnProjekt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kriterium_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Kriterium_Id
		{
			get
			{
				return this._Kriterium_Id;
			}
			set
			{
				if ((this._Kriterium_Id != value))
				{
					if (this._Tab_Kriterium.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKriterium_IdChanging(value);
					this.SendPropertyChanging();
					this._Kriterium_Id = value;
					this.SendPropertyChanged("Kriterium_Id");
					this.OnKriterium_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent_Kriterium_Id", DbType="Int")]
		public System.Nullable<int> Parent_Kriterium_Id
		{
			get
			{
				return this._Parent_Kriterium_Id;
			}
			set
			{
				if ((this._Parent_Kriterium_Id != value))
				{
					if (this._Tab_Kriterium1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParent_Kriterium_IdChanging(value);
					this.SendPropertyChanging();
					this._Parent_Kriterium_Id = value;
					this.SendPropertyChanged("Parent_Kriterium_Id");
					this.OnParent_Kriterium_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gewichtung_kardinal", DbType="Int")]
		public System.Nullable<int> Gewichtung_kardinal
		{
			get
			{
				return this._Gewichtung_kardinal;
			}
			set
			{
				if ((this._Gewichtung_kardinal != value))
				{
					this.OnGewichtung_kardinalChanging(value);
					this.SendPropertyChanging();
					this._Gewichtung_kardinal = value;
					this.SendPropertyChanged("Gewichtung_kardinal");
					this.OnGewichtung_kardinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gewichtung_Prozentural_Ebene", DbType="Int")]
		public System.Nullable<int> Gewichtung_Prozentural_Ebene
		{
			get
			{
				return this._Gewichtung_Prozentural_Ebene;
			}
			set
			{
				if ((this._Gewichtung_Prozentural_Ebene != value))
				{
					this.OnGewichtung_Prozentural_EbeneChanging(value);
					this.SendPropertyChanging();
					this._Gewichtung_Prozentural_Ebene = value;
					this.SendPropertyChanged("Gewichtung_Prozentural_Ebene");
					this.OnGewichtung_Prozentural_EbeneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gewichtung_Prozentural_Projekt", DbType="Int")]
		public System.Nullable<int> Gewichtung_Prozentural_Projekt
		{
			get
			{
				return this._Gewichtung_Prozentural_Projekt;
			}
			set
			{
				if ((this._Gewichtung_Prozentural_Projekt != value))
				{
					this.OnGewichtung_Prozentural_ProjektChanging(value);
					this.SendPropertyChanging();
					this._Gewichtung_Prozentural_Projekt = value;
					this.SendPropertyChanged("Gewichtung_Prozentural_Projekt");
					this.OnGewichtung_Prozentural_ProjektChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criterion_ProjectCriterion", Storage="_Tab_Kriterium", ThisKey="Kriterium_Id", OtherKey="Kriterium_Id", IsForeignKey=true)]
		public Criterion Tab_Kriterium
		{
			get
			{
				return this._Tab_Kriterium.Entity;
			}
			set
			{
				Criterion previousValue = this._Tab_Kriterium.Entity;
				if (((previousValue != value) 
							|| (this._Tab_Kriterium.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tab_Kriterium.Entity = null;
						previousValue.Tab_Projektkriterium.Remove(this);
					}
					this._Tab_Kriterium.Entity = value;
					if ((value != null))
					{
						value.Tab_Projektkriterium.Add(this);
						this._Kriterium_Id = value.Kriterium_Id;
					}
					else
					{
						this._Kriterium_Id = default(int);
					}
					this.SendPropertyChanged("Tab_Kriterium");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Criterion_ProjectCriterion1", Storage="_Tab_Kriterium1", ThisKey="Parent_Kriterium_Id", OtherKey="Kriterium_Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Criterion Criterion
		{
			get
			{
				return this._Tab_Kriterium1.Entity;
			}
			set
			{
				Criterion previousValue = this._Tab_Kriterium1.Entity;
				if (((previousValue != value) 
							|| (this._Tab_Kriterium1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tab_Kriterium1.Entity = null;
						previousValue.ProjectCriterion.Remove(this);
					}
					this._Tab_Kriterium1.Entity = value;
					if ((value != null))
					{
						value.ProjectCriterion.Add(this);
						this._Parent_Kriterium_Id = value.Kriterium_Id;
					}
					else
					{
						this._Parent_Kriterium_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Criterion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectCriterion", Storage="_Tab_Projekt", ThisKey="Projekt_Id", OtherKey="Projekt_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Project Project
		{
			get
			{
				return this._Tab_Projekt.Entity;
			}
			set
			{
				Project previousValue = this._Tab_Projekt.Entity;
				if (((previousValue != value) 
							|| (this._Tab_Projekt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tab_Projekt.Entity = null;
						previousValue.ProjectCriterion.Remove(this);
					}
					this._Tab_Projekt.Entity = value;
					if ((value != null))
					{
						value.ProjectCriterion.Add(this);
						this._Projekt_Id = value.Projekt_Id;
					}
					else
					{
						this._Projekt_Id = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
